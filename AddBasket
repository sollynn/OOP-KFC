from fasthtml.common import*

app, rt = fast_app()

class Food:
    def __init__(self, name : str, menu_id : str, price : float, img : str):
        self.__name = name
        self.__menu_id = menu_id
        self.__price = price
        self.__img = img

    @property
    def get_name(self):
        return self.__name

    @property
    def get_menu_id(self):
        return self.__menu_id

    @property
    def get_price(self):
        return self.__price

    @property
    def get_img(self):
        return self.__img
    
class Stock:
    def __init__(self, food : "Food", amount : int):
        self.__food = food
        self.__amount = amount

    @property
    def get_food(self):
        return self.__food
    
class PickingBasket:
    def __init__(self, food : "Food", amount : int):
        self.__food = food
        self.__amount = amount

    @property
    def get_amount(self):
        return self.__amount
    
class Basket:
    def __init__(self):
        self.__list_picking_basket = []

    def add_basket(self, food : 'Food', amount : int):
        if(isinstance(food,Food) and isinstance(amount,int)):
            self.__list_picking_basket.append(PickingBasket(food,amount))
            return "Done"
        else:
            return ("Error")
    
    @property
    def get_total_amount_items(self):
        amount = 0
        for item in self.__list_picking_basket:
            amount = amount + item.get_amount
        return amount
    
class Account:
    def __init__(self, account_id : str):
        self.__account_id = account_id

    @property
    def get_account_id(self):
        return self.__account_id
    
class Member(Account): 
    def __init__(self, account_id : str, basket : "Basket"):
        Account.__init__(self,account_id)
        self.__basket = basket
    
    @property
    def get_basket(self):
        return self.__basket
    
    def  add_member_basket(self, food : 'Food', amount : int):
        if(isinstance(food,Food) and isinstance(amount,int)):
            self.__basket.add_basket(food,amount)
            return "Done"
        else:
            return "Invalid"
        
    @property
    def get_total_amount_items(self):
        return self.__basket.get_total_amount_items
    
class System:
    def __init__(self):
        self.__list_member = []
        self.__list_stock = []

    def create_member(self, member : 'Member'):
        return self.__list_member.append(member)
    
    def add_stock(self, stock : 'Stock'):
        return self.__list_stock.append(stock)

    def get_food_by_id(self, menu_id):
        if(isinstance(menu_id,str)):
            for stock in self.__list_stock:
                if(stock.get_food.get_menu_id == menu_id):
                    return stock.get_food
        else:
            return "Invalid"
        
    def get_member_by_id(self, account_id : str):
        if(isinstance(account_id,str)):
            for member in self.__list_member:
                if(member.get_account_id == account_id):
                    return member
        else:
            return "Error"
        
    def  add_basket(self, member : 'Member', food : 'Food', amount : int):
        if(isinstance(member,Member) and isinstance(food,Food) and isinstance(amount,int)):
            member.add_member_basket(food,amount)
        else:
            return "Invalid"
        
    def get_total_amount_items(self, member : 'Member'):
        return member.get_total_amount_items
    
# สร้าง Food Instances
food1 = Food(name="Burger", menu_id="B001", price=80.0, img="https://cdn.i.haymarketmedia.asia/?n=campaign-asia%2fcontent%2fExplosion_grilld_1200.jpg&h=570&w=855&q=100&v=20170226&c=1")
food2 = Food(name="Pizza", menu_id="P001", price=150.0, img="https://img.freepik.com/free-vector/hand-drawn-pizza-cartoon-illustration_52683-127397.jpg?t=st=1740933754~exp=1740937354~hmac=75cbf2dee725203636402dcbb364670bb0a8cdd51fc7810f8736fc0e0a5ef0ca&w=900")

# สร้าง Stock Instances
stock1 = Stock(food=food1, amount=10)
stock2 = Stock(food=food2, amount=20)

# สร้าง Basket Instance
basket = Basket()

# สร้าง Member Instance
member1 = Member(account_id="M001", basket=basket)

# สร้าง System Instance
system = System()

# เพิ่ม Stock และ Member ไปที่ System
system.add_stock(stock1)
system.add_stock(stock2)
system.create_member(member1)

@rt("/")
def get(session):
    session.setdefault(f'amount_{member1.get_account_id}', 1)

    return Container(
        Div(
            Img(src='https://purepng.com/public/uploads/large/purepng.com-shopping-basketshoppingcarttrolleycarriagebuggysupermarketsbasket-1421526532727qjew3.png', style='width: 50px; height: 50px;'),
            P(f'= {system.get_total_amount_items(member1)}', id='total_amount' , style='text-align: right; margin-left: 5px; font-size: 30px;'),
            style="display: flex; justify-content: flex-end; align-items: center;"  
        ),
        Hr(),
        Img(src=food1.get_img, style ='width: 500px; height: 500px; margin-left: 100px'),
        Card(
            H1(food1.get_name),
            P(f"{food1.get_price} บาท" ),
            P("จำนวน",
              Button("-", hx_post=f'/amount/subtract/{member1.get_account_id}',hx_target='#initial_amount',hx_swap='innerHTML',style='display: inline-block;'),
              P(f"{session[f'amount_{member1.get_account_id}']}",id='initial_amount', style='display: inline-block; margin: 0 10px;'),
              Button("+",hx_post=f'/amount/add/{member1.get_account_id}',hx_target='#initial_amount',hx_swap='innerHTML',style='display: inline-block;'),
              style='display: inline-block; margin: 0;'),
              footer = Button('Add', hx_post=f'/add/{member1.get_account_id}/{food1.get_menu_id}', hx_target='#total_amount', hx_swap='innerHTML'),
            style = 'width: 500px; height: 200px; float: right;'
        )
        
    )

@rt('/amount/add/{member_id}')
def post(session, member_id: str):
    session.setdefault(f'amount_{member_id}', 1)  # ถ้ายังไม่มีค่าให้เริ่มที่ 0
    session[f'amount_{member_id}'] += 1  # เพิ่มค่าไปทีละ 1
    return P(f"{session[f'amount_{member_id}']}")  # ส่งค่ากลับไปแสดงผล

@rt('/amount/subtract/{member_id}')
def post(session, member_id: str):
    session.setdefault(f'amount_{member_id}', 1)
    session[f'amount_{member_id}'] = max(1, session[f'amount_{member_id}'] - 1)  # ลดค่าแต่ไม่ต่ำกว่า 0
    return P(f"{session[f'amount_{member_id}']}")

@rt('/add/{member_id}/{menu_id}')
def post(session, member_id: str, menu_id: str):
    amount = session.get(f'amount_{member_id}', 1)  # ดึงค่าที่เก็บไว้ใน session
    system.add_basket(system.get_member_by_id(member_id), system.get_food_by_id(menu_id), amount)
    return P(f'= {system.get_total_amount_items(system.get_member_by_id(member_id))}')

serve()
