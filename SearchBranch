from fasthtml.common import *
from typing import List, Tuple, Optional
from datetime import datetime, time, timedelta


app, rt = fast_app()
class Ordertype:
    def __init__(self,):
        pass

class Delivery:
    def __init__(self):
        self.__address = None

    def get_address(self):
        return self.__address
    
    def set_address(self, address_info: str):
        self.__address = address_info
        
class PickUp:
    def __init__(self):
        self.__selected_branch = None

    def get_selected_branch(self):
        return self.__selected_branch

    def set_branch(self, branch_info):
        self.__selected_branch = branch_info
    
class Branch:
    def __init__(self, postcode, district, address):
        self.__postcode = postcode
        self.__district = district
        self.__address = address

    def get_branch_info(self):
        return {
            "postcode": self.__postcode,  
            "district": self.__district,  
            "address": self.__address
        }

class System:
    def __init__(self):
        self.__branches = []

    def add_branch(self, branch: Branch):
        self.__branches.append(branch)

    def find_branch_from_post(self, post_number: str):
        try:
            post_number = int(post_number)
        except ValueError:
            return [] 

        matched_branches = [branch.get_branch_info() for branch in self.__branches if branch.get_branch_info()['postcode'] == post_number]
        return matched_branches


system = System()
delivery = Delivery()
branches = [
    Branch(10200, "‡∏û‡∏£‡∏∞‡∏ô‡∏Ñ‡∏£", "Bangkok, Thailand"),
    Branch(10300, "‡∏î‡∏∏‡∏™‡∏¥‡∏ï", "Bangkok, Thailand"),
    Branch(10530, "‡∏´‡∏ô‡∏≠‡∏á‡∏à‡∏≠‡∏Å", "Bangkok, Thailand"),
    Branch(10500, "‡∏ö‡∏≤‡∏á‡∏£‡∏±‡∏Å", "Bangkok, Thailand"),
    Branch(10220, "‡∏ö‡∏≤‡∏á‡πÄ‡∏Ç‡∏ô", "Bangkok, Thailand"),
    Branch(10240, "‡∏ö‡∏≤‡∏á‡∏Å‡∏∞‡∏õ‡∏¥", "Bangkok, Thailand"),
    Branch(10330, "‡∏õ‡∏ó‡∏∏‡∏°‡∏ß‡∏±‡∏ô", "Bangkok, Thailand"),
    Branch(10100, "‡∏õ‡πâ‡∏≠‡∏°‡∏õ‡∏£‡∏≤‡∏ö‡∏®‡∏±‡∏ï‡∏£‡∏π‡∏û‡πà‡∏≤‡∏¢", "Bangkok, Thailand"),
    Branch(10260, "‡∏û‡∏£‡∏∞‡πÇ‡∏Ç‡∏ô‡∏á", "Bangkok, Thailand"),
    Branch(10510, "‡∏°‡∏µ‡∏ô‡∏ö‡∏∏‡∏£‡∏µ", "Bangkok, Thailand"),
    Branch(10520, "‡∏•‡∏≤‡∏î‡∏Å‡∏£‡∏∞‡∏ö‡∏±‡∏á", "Bangkok, Thailand"),
    Branch(10120, "‡∏¢‡∏≤‡∏ô‡∏ô‡∏≤‡∏ß‡∏≤", "Bangkok, Thailand"),
    Branch(10100, "‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡∏ß‡∏á‡∏®‡πå", "Bangkok, Thailand"),
    Branch(10400, "‡∏û‡∏ç‡∏≤‡πÑ‡∏ó", "Bangkok, Thailand"),
    Branch(10600, "‡∏ò‡∏ô‡∏ö‡∏∏‡∏£‡∏µ", "Bangkok, Thailand"),
    Branch(10600, "‡∏ö‡∏≤‡∏á‡∏Å‡∏≠‡∏Å‡πÉ‡∏´‡∏ç‡πà", "Bangkok, Thailand"),
    Branch(10310, "‡∏´‡πâ‡∏ß‡∏¢‡∏Ç‡∏ß‡∏≤‡∏á", "Bangkok, Thailand"),
    Branch(10600, "‡∏Ñ‡∏•‡∏≠‡∏á‡∏™‡∏≤‡∏ô", "Bangkok, Thailand"),
    Branch(10170, "‡∏ï‡∏•‡∏¥‡πà‡∏á‡∏ä‡∏±‡∏ô", "Bangkok, Thailand"),
    Branch(10700, "‡∏ö‡∏≤‡∏á‡∏Å‡∏≠‡∏Å‡∏ô‡πâ‡∏≠‡∏¢", "Bangkok, Thailand"),
    Branch(10150, "‡∏ö‡∏≤‡∏á‡∏Ç‡∏∏‡∏ô‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô", "Bangkok, Thailand"),
    Branch(10160, "‡∏†‡∏≤‡∏©‡∏µ‡πÄ‡∏à‡∏£‡∏¥‡∏ç", "Bangkok, Thailand"),
    Branch(10160, "‡∏´‡∏ô‡∏≠‡∏á‡πÅ‡∏Ç‡∏°", "Bangkok, Thailand"),
    Branch(10140, "‡∏£‡∏≤‡∏©‡∏é‡∏£‡πå‡∏ö‡∏π‡∏£‡∏ì‡∏∞", "Bangkok, Thailand"),
    Branch(10700, "‡∏ö‡∏≤‡∏á‡∏û‡∏•‡∏±‡∏î", "Bangkok, Thailand"),
    Branch(10400, "‡∏î‡∏¥‡∏ô‡πÅ‡∏î‡∏á", "Bangkok, Thailand"),
    Branch(10240, "‡∏ö‡∏∂‡∏á‡∏Å‡∏∏‡πà‡∏°", "Bangkok, Thailand"),
    Branch(10120, "‡∏™‡∏≤‡∏ó‡∏£", "Bangkok, Thailand"),
    Branch(10800, "‡∏ö‡∏≤‡∏á‡∏ã‡∏∑‡πà‡∏≠", "Bangkok, Thailand"),
    Branch(10900, "‡∏à‡∏ï‡∏∏‡∏à‡∏±‡∏Å‡∏£", "Bangkok, Thailand"),
    Branch(10120, "‡∏ö‡∏≤‡∏á‡∏Ñ‡∏≠‡πÅ‡∏´‡∏•‡∏°", "Bangkok, Thailand"),
    Branch(10250, "‡∏õ‡∏£‡∏∞‡πÄ‡∏ß‡∏®", "Bangkok, Thailand"),
    Branch(10110, "‡∏Ñ‡∏•‡∏≠‡∏á‡πÄ‡∏ï‡∏¢", "Bangkok, Thailand"),
    Branch(10250, "‡∏™‡∏ß‡∏ô‡∏´‡∏•‡∏ß‡∏á", "Bangkok, Thailand"),
    Branch(10150, "‡∏à‡∏≠‡∏°‡∏ó‡∏≠‡∏á", "Bangkok, Thailand"),
    Branch(10210, "‡∏î‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡∏≠‡∏á", "Bangkok, Thailand"),
    Branch(10400, "‡∏£‡∏≤‡∏ä‡πÄ‡∏ó‡∏ß‡∏µ", "Bangkok, Thailand"),
    Branch(10230, "‡∏•‡∏≤‡∏î‡∏û‡∏£‡πâ‡∏≤‡∏ß", "Bangkok, Thailand"),
    Branch(10110, "‡∏ß‡∏±‡∏í‡∏ô‡∏≤", "Bangkok, Thailand"),
    Branch(10240, "‡∏™‡∏∞‡∏û‡∏≤‡∏ô‡∏™‡∏π‡∏á", "Bangkok, Thailand"),
    Branch(10100, "‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡∏ß‡∏á‡∏®‡πå", "Bangkok, Thailand"),
    Branch(10120, "‡∏™‡∏≤‡∏ó‡∏£", "Bangkok, Thailand"),
    Branch(10220, "‡∏™‡∏≤‡∏¢‡πÑ‡∏´‡∏°", "Bangkok, Thailand"),
    Branch(10230, "‡∏Ñ‡∏±‡∏ô‡∏ô‡∏≤‡∏¢‡∏≤‡∏ß", "Bangkok, Thailand"),
    Branch(10240, "‡∏™‡∏∞‡∏û‡∏≤‡∏ô‡∏™‡∏π‡∏á", "Bangkok, Thailand"),
    Branch(10310, "‡∏ß‡∏±‡∏á‡∏ó‡∏≠‡∏á‡∏´‡∏•‡∏≤‡∏á", "Bangkok, Thailand"),
    Branch(10510, "‡∏Ñ‡∏•‡∏≠‡∏á‡∏™‡∏≤‡∏°‡∏ß‡∏≤", "Bangkok, Thailand"),
    Branch(10260, "‡∏ö‡∏≤‡∏á‡∏ô‡∏≤", "Bangkok, Thailand"),
    Branch(10170, "‡∏ó‡∏ß‡∏µ‡∏ß‡∏±‡∏í‡∏ô‡∏≤", "Bangkok, Thailand"),
    Branch(10140, "‡∏ó‡∏∏‡πà‡∏á‡∏Ñ‡∏£‡∏∏", "Bangkok, Thailand"),
    Branch(10150, "‡∏ö‡∏≤‡∏á‡∏ö‡∏≠‡∏ô", "Bangkok, Thailand")
]

for branch in branches:
    system.add_branch(branch)


def search_branches(postcode: str):
    branch_list = system.find_branch_from_post(postcode)
    if branch_list:
        return Div(
            *[
                Div(
                    Div(
                        H3(f"Branch: {branch['district']}", cls="branch-title"),
                        P(f"Address: {branch['address']}", cls="branch-address"),
                        Button("Select",
                               hx_post="/select_branch",
                               hx_vals={"district": branch["district"], "address": branch["address"]},
                               hx_target="#selected_branch",
                               cls="select-button"
                        )
                    ),
                    cls="branch-card"
                )
                for branch in branch_list
            ]
        )
    else:
        return B("No branch found for this postcode.", cls="no-branch")
    
@rt('/')
def order_type():
    return Div(
        H1("Choose Your Order Type", cls="title"),
        Style("""
            @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap');
            @import url('https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&display=swap');

            html, body {
                background: linear-gradient(to bottom, #ffffff, #ff7575);
                min-height: 100vh;
                margin: 0;
                padding: 0;
                font-family: 'Roboto', sans-serif;
                display: flex;  
                flex-direction: column;
                align-items: center;
                justify-content: center;
                text-align: center;
            }

            .title {
                font-size: 36px;
                font-weight: 700;
                color: #333;
                margin-top: -250px;
                margin-bottom: 20px;
                text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
                font-family: 'Playfair Display', serif;  /* ‡πÉ‡∏ä‡πâ Playfair Display ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° */
            }

            .order-container {
                display: flex;
                flex-direction: column;
                align-items: center;
                gap: 20px;
                margin-top: 30px;
            }

            .order-button1 {
                width: 220px;
                height: 55px;
                font-size: 20px;
                font-weight: bold;
                text-align: center;
                border: none;
                background: linear-gradient(135deg, #ff758c, #ff7eb3);
                color: white;
                border-radius: 12px;
                cursor: pointer;
                box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
                transition: all 0.4s ease-in-out;
                margin-top: 50px;
            }
              
            .order-button2 {
                width: 220px;
                height: 55px;
                font-size: 20px;
                font-weight: bold;
                text-align: center;
                border: none;
                background: linear-gradient(135deg, #ff758c, #ff7eb3);
                color: white;
                border-radius: 12px;
                cursor: pointer;
                box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
                transition: all 0.4s ease-in-out;
                margin-top: 20px;
            }

            .order-button1:hover {
                background: linear-gradient(135deg, #ff4b6a, #ff6b9b);
                transform: translateY(-3px);
                box-shadow: 0px 6px 12px rgba(0, 0, 0, 0.2);
            }
            .order-button2:hover {
                background: linear-gradient(135deg, #ff4b6a, #ff6b9b);
                transform: translateY(-3px);
                box-shadow: 0px 6px 12px rgba(0, 0, 0, 0.2);
            }
        """),
        Div(
            Button("üöö Pick Up", onclick="window.location.href='/pickup';", cls="order-button1"),
            Button("üè° Delivery", onclick="window.location.href='/delivery';", cls="order-button2"),
            cls="order-container"
        )
    )



@rt('/pickup')
def get():
    return Titled("Search Branch by Postcode",
    Style("""
            @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap');
            @import url('https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&display=swap');

            html, body {
                background: linear-gradient(to bottom, #ffffff, #ff7575);
                min-height: 100vh;
                margin: 0;
                padding: 0;
                font-family: 'Roboto', sans-serif;
                display: flex;
                flex-direction: column;
                align-items: center;
                justify-content: center;
                text-align: center;
            }
            #results {
                max-height: 178px;
                overflow-y: auto;
                width: 100%;
                text-align: center;
                margin-top: 10px;
            }

            h1 {
                font-size: 36px;
                font-weight: 700;
                color: #333;
                margin-top: -100px;
                margin-bottom: 20px;
                text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
                font-family: 'Playfair Display', serif; 
            }
          
            h3 {
                font-size: 36px;
                font-weight: 700;
                color: #333;
                text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
                font-family: 'Playfair Display', serif; 
            }
          
            .no-branch{
                font-size: 14px;
                color: #333;
                text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
                font-family: 'Playfair Display', serif; 
            }
            .search-container {
                display: flex;
                flex-direction: column;
                align-items: center;
                gap: 20px;
                margin-top: 30px;
            }

            .input-postcode {
                width: 400px !important;
                height: 50px !important;
                font-size: 18px !important;
                padding: 10px !important;
                border-radius: 10px !important;
                border: 1px solid #ddd !important;
                background-color: #ffd4d4 !important;
                color: #333 !important;
                margin-top: 20px !important;
            }
            .input-postcode::placeholder {
                color: #333 !important;
            }

            .input-postcode:focus {
                background-color: #ffd1d1 !important;
                border: 1px solid #ff7eb3 !important;
            }

            .search-button {
                width: 220px;
                height: 55px;
                font-size: 20px;
                font-weight: bold;
                text-align: center;
                border: none;
                background: linear-gradient(135deg, #ff758c, #ff7eb3);
                color: white;
                border-radius: 12px;
                cursor: pointer;
                box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
                transition: all 0.4s ease-in-out;
            }
            .branch-title {
                font-size: 22px; /* ‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÉ‡∏´‡∏ç‡πà‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢ */
                font-weight: bold; /* ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏Ç‡∏≤‡∏î‡∏π‡πÄ‡∏î‡πà‡∏ô */
                color: #333; /* ‡πÉ‡∏ä‡πâ‡πÇ‡∏ó‡∏ô‡∏™‡∏µ‡πÅ‡∏î‡∏á‡∏≠‡πà‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ö‡∏ò‡∏µ‡∏° */
                text-align: center; /* ‡∏à‡∏±‡∏î‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏∂‡πà‡∏á‡∏Å‡∏•‡∏≤‡∏á */
                margin-bottom: 10px; /* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡πà‡∏≤‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á */
                font-family: 'Playfair Display', serif;
            }

            .branch-address {
                font-size: 16px; /* ‡∏Ç‡∏ô‡∏≤‡∏î‡∏û‡∏≠‡∏î‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà */
                color: #333; /* ‡πÉ‡∏ä‡πâ‡∏™‡∏µ‡πÄ‡∏ó‡∏≤‡πÄ‡∏Ç‡πâ‡∏°‡πÉ‡∏´‡πâ‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢ */
                text-align: center; /* ‡∏à‡∏±‡∏î‡∏Å‡∏∂‡πà‡∏á‡∏Å‡∏•‡∏≤‡∏á */
                line-height: 1.5; /* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡πà‡∏≤‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î */
                font-family: 'Roboto', sans-serif; /* ‡πÉ‡∏ä‡πâ‡∏ü‡∏≠‡∏ô‡∏ï‡πå Roboto ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢ */
            }
          
            .search-button:hover {
                background: linear-gradient(135deg, #ff4b6a, #ff6b9b);
                transform: translateY(-3px);
                box-shadow: 0px 6px 12px rgba(0, 0, 0, 0.2);
            }

            .done-button {
                width: 220px;
                height: 55px;
                font-size: 20px;
                font-weight: bold;
                text-align: center;
                border: none;
                background: linear-gradient(135deg, #ff758c, #ff7eb3);
                color: white;
                border-radius: 12px;
                cursor: pointer;
                box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
                transition: all 0.4s ease-in-out;
                margin-bottom: -100px;
            }
          
            .done-button:hover {
                background: linear-gradient(135deg, #ff4b6a, #ff6b9b);
                transform: translateY(-3px);
                box-shadow: 0px 6px 12px rgba(0, 0, 0, 0.2);
                margin-top: 10px;
            }

            .branch-card {
                background: white;
                padding: 20px;
                margin: 15px auto;
                width: 90%;
                max-width: 500px;
                border-radius: 12px;
                box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
                border-left: 5px solid #ff758c;
                transition: transform 0.3s ease, box-shadow 0.3s ease;
            }

            .branch-card:hover {
                transform: translateY(-5px); /* ‡∏¢‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏Æ‡πÄ‡∏ß‡∏≠‡∏£‡πå */
                box-shadow: 0px 6px 12px rgba(0, 0, 0, 0.2); /* ‡πÄ‡∏á‡∏≤‡πÄ‡∏Ç‡πâ‡∏°‡∏Ç‡∏∂‡πâ‡∏ô */
            }
            .no-branch-card{
                color: #333;
                margin: 10px;
                margin-top: 40px;
                margin-bottom: 40px;
                font-family: 'Playfair Display', serif; 
            }
            .select-button {
                background: linear-gradient(135deg, #ff758c, #ff7eb3);
                color: white;
                border-radius: 10px;
                padding: 10px 20px;
                border: none;
                cursor: pointer;
                transition: background 0.3s;
            }

            .select-button:hover {
                background: linear-gradient(135deg, #ff4b6a, #ff6b9b);
            }
        """),
        Form(Input(id="postcode", placeholder="Enter postcode...", name="postcode", cls="input-postcode"), 
             hx_get="/search", target_id="results", hx_trigger="keyup delay:200ms"),
        Div(id="results"),
        H3("Selected Branch :"),
        Div(B("No branch selected."), id="selected_branch", 
            cls = "no-branch-card"),
        Button("Done", onclick="window.location.href='/';", cls="done-button"),
    )



@rt('/delivery')
def delivery_page():
    return Titled("Enter Your Delivery Address",
        Style("""
                @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap');
                @import url('https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&display=swap');
            html, body {
                background: linear-gradient(to bottom, #ffffff, #ff7575);
                min-height: 100vh;
                margin: 0;
                padding: 0;
                font-family: 'Roboto', sans-serif;
                display: flex;
                flex-direction: column;
                align-items: center;
                justify-content: center;
                text-align: center;
            }
              
            h1 {
                font-size: 36px;
                font-weight: 700;
                color: #333;    
                margin-top: -200px;
                margin-bottom: 20px;
                text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
                font-family: 'Playfair Display', serif; 
            }
                
            .delivery-input {
                width: 400px !important;
                height: 50px !important;
                font-size: 18px !important;
                padding: 10px !important;
                border-radius: 10px !important;
                border: 1px solid #ddd !important;
                background-color: #f8d1c4 !important; /* ‡∏™‡∏µ‡πÄ‡∏Ç‡πâ‡∏°‡∏Ç‡∏∂‡πâ‡∏ô */
                color: #333 !important;
                margin-top: 20px !important;
            }

            .delivery-input:focus {
                background-color: #ffd1d1 !important;
                border: 1px solid #ff7eb3 !important;
            }

            .done-button {
                background-color: #ff7eb3 !important;
                color: white !important;
                font-size: 16px !important;
                padding: 12px 24px !important;
                border-radius: 10px !important;
                border: none !important;
                cursor: pointer;
                margin-top: 20px !important;
            }

            .done-button:hover {
                background-color: #ff5e99 !important;
            }
            .delivery-input::placeholder{
                color: #333 !important;
            }

            #address_confirmation {
                font-size: 18px;
                color: #333;
                margin-top: 20px;
            }
        """),
        Form(
            Input(id="delivery_address", placeholder="Enter your delivery address...", name="address", cls="delivery-input"),
            Button("Submit", cls="done-button"),
            method='post',
            action="/submit_address"
        ),
        Div(id="address_confirmation"),
    )


@rt('/submit_address')
def submit_address(address: str):
    if not address:
        return B("Please enter a valid address.")

    delivery.set_address(address)
    
    print(f"Address entered: {delivery.get_address()}")
    
@rt('/select_delivery')
def select_delivery():
    return Titled("Delivery Information",
        H3(f"Delivery Address: {delivery.get_address()}"),
        Button("Done", onclick="window.location.href='/';", cls = "done-button"),
    )

@rt('/search')
def search(postcode: Optional[str] = None):
    if not postcode or not postcode.strip().isdigit():
        return B("Please enter a valid postcode.")
    result = search_branches(postcode.strip())
    return Div(result)

pickup = PickUp()

@rt('/select_branch')
def select_branch(district: str, address: str):
    branch_info = {"district": district, "address": address}
    pickup.set_branch(branch_info)
    print(f"Branch Select : {pickup.get_selected_branch()}")
    return B(f"Selected Branch : {district} ({address})")
    

serve()
